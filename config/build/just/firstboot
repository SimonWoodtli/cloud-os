#!/bin/bash
declare red=$'\033[31m'
declare reset=$'\033[0m'
declare -i major=${BASH_VERSION:0:1}
declare input="0"
declare -i i=0
##FIXME in F38 flathub ships with it, so this test would fail need to check for options instead of name
##FIXME I need a firstboot-done file to check if the whole script ran on
##a system and only allow it to run if it did not yet run
############################# runtime-tests ############################
[ "$(flatpak remotes | grep -q fedora; echo $?)" -eq 0 ] || { echo "Firstboot already ran"; exit 0; }
if [[ ! ($major == 4 || $major == 5) ]]; then
  echo "${red}Error:$reset Sorry, requires Bash 4+. Install and try again."
  exit 1
fi
[[ -f /tmp/firstboot-done ]] && input="$(cat /tmp/firstboot-done)"
echo "Info: Waiting for Internet connection"
until /usr/bin/ping -q -c 1 flathub.org; do sleep 1; done
################################# main #################################
read -s -p "[sudo] password for $(whoami): " password

#TODO add colors to INFO and ERROR
#TODO if command fails give reminder to run `just firstboot` again to
#finish from where left off
case $input in
  0) echo "Info: Step 1, Removing Filtered Flathub Repository"                                      
    echo 0 > /tmp/firstboot-done
    #TODO add test if flathub exist, only then run the next command
    #FIXME can this /dev/null make sure i dont get re prompted with user
    #password? Test at next run
    sudo -S /usr/bin/flatpak remote-delete flathub --force <<< "$password"
    if [ "$?" != 0 ] ; then echo "Error: Step 1 failed"; exit 1; fi
    echo 1 > /tmp/firstboot-done
    ;&
  1) echo "Info: Step 2, Enabling Flathub Repository"
    /usr/bin/flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    if [ "$?" != 0 ] ; then echo "Error: Step 2 failed"; exit 1; fi
    echo 2 > /tmp/firstboot-done
    ;&
  2) echo "Info: Step 3, Replacing Fedora Flatpaks with Flathub Ones (this may take a while)"
    /usr/bin/flatpak install --user --noninteractive org.gnome.Platform//43
    if [ "$?" != 0 ] ; then echo "Error: Step 3 failed"; exit 1; fi
    /usr/bin/flatpak install --user --noninteractive --reinstall flathub $(flatpak list --app-runtime=org.fedoraproject.Platform --columns=application | tail -n +1 )
    if [ "$?" != 0 ] ; then echo "Error: Step 3 failed"; exit 1; fi
    echo 3 > /tmp/firstboot-done
    ;&
  3) echo "Info: Step 4, Removing all preinstalled Flatpaks"
    /usr/bin/flatpak remove --system --noninteractive --all
    if [ "$?" != 0 ] ; then echo "Error: Step 4 failed"; exit 1; fi
    echo 4 > /tmp/firstboot-done
    ;&
  4) echo "Info: Step 5, Removing Fedora Flatpak Repository"
    sudo -S /usr/bin/flatpak remote-delete fedora --force <<< "$password"
    if [ "$?" != 0 ] ; then echo "Error: Step 5 failed"; exit 1; fi
    echo 5 > /tmp/firstboot-done
    ;&
  5) flatpaks_count=$(yq '.flatpaks[]' < /usr/share/cloud-os/cloud-os-just/recipe.yml | wc -l)
    echo "Info: Step 6, Installing $flatpaks_count Flatpaks from Recipe"
    flatpaks=$(yq '.flatpaks[]' < /usr/share/cloud-os/cloud-os-just/recipe.yml)
    i=0
    for pkg in $flatpaks; do
      echo "Info: Installing ${pkg}, Flatpak $i out of $flatpaks_count"
      /usr/bin/flatpak install --user --noninteractive flathub $pkg
      i+=1
    done
    if [ "$?" != 0 ] ; then echo "Error: Step 6 failed"; exit 1; fi
    echo 6 > /tmp/firstboot-done
    ;&
  6) extensionsCount=$(yq '.extensions[]' < /usr/share/cloud-os/cloud-os-just/recipe.yml | wc -l)
    echo "Info: Step 7, Installing $extensionsCount Extensions from Recipe"
    extensions=$(yq '.extensions[]' < /usr/share/cloud-os/cloud-os-just/recipe.yml)
    i=0
    for pkg in $extensions; do
      echo "Info: Installing ${pkg}, Extension $i out of $extensionsCount"
      /usr/bin/gnome-extensions-cli install $pkg; sleep 2
      i+=1
    done
    if [ "$?" != 0 ] ; then echo "Error: Step 7 failed"; exit 1; fi
    echo 7 > /tmp/firstboot-done
    ;&
  7) echo "Info: Step 8, Set Dconf Settings"
    declare defaultId=$(gsettings get org.gnome.Terminal.ProfilesList list | sed 's|.$||; s|^.||' )
    gsettings set org.gnome.Terminal.ProfilesList list "[$defaultId, 'eaa70d0f-2bff-4c94-8714-5c8815cf8b0f', '2ea51c17-a89c-4151-af02-925016c2a29a', '4c3035f9-08ef-4956-8cf2-c11fe365d146']"
    gsettings set org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:eaa70d0f-2bff-4c94-8714-5c8815cf8b0f/ visible-name 'gruvbox-host'
    if [ "$?" != 0 ] ; then echo "Error: Step 8 failed"; exit 1; fi
    gsettings set org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:2ea51c17-a89c-4151-af02-925016c2a29a/ visible-name 'gruvbox-workspace'
    if [ "$?" != 0 ] ; then echo "Error: Step 8 failed"; exit 1; fi
    gsettings set org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:4c3035f9-08ef-4956-8cf2-c11fe365d146/ visible-name 'gruvbox-alpine'
    if [ "$?" != 0 ] ; then echo "Error: Step 8 failed"; exit 1; fi
    gsettings set org.gnome.Terminal.ProfileList default '2ea51c17-a89c-4151-af02-925016c2a29a'
    if [ "$?" != 0 ] ; then echo "Error: Step 8 failed"; exit 1; fi
    gsettings set org.gnome.Terminal.ProfilesList list "['eaa70d0f-2bff-4c94-8714-5c8815cf8b0f', '2ea51c17-a89c-4151-af02-925016c2a29a', '4c3035f9-08ef-4956-8cf2-c11fe365d146']"
    if [ "$?" != 0 ] ; then echo "Error: Step 8 failed"; exit 1; fi
    gsettings set org.gnome.desktop.interface enable-animations false
    if [ "$?" != 0 ] ; then echo "Error: Step 8 failed"; exit 1; fi
    ## add uniemoji keyboard
    gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'us'), ('ibus', 'uniemoji')]"
    if [ "$?" != 0 ] ; then echo "Error: Step 8 failed"; exit 1; fi
    #set compose key:
    #gsettings set org.gnome.desktop.input-sources xkb-options "['lv3:ralt_switch']"
    echo 8 > /tmp/firstboot-done
    ;&
  8) echo "Info: Step 9, Enabling Flatpak auto update"
    /usr/bin/systemctl --user enable --now flatpak-user-update.timer
    if [ "$?" != 0 ] ; then echo "Error: Step 9 failed"; exit 1; fi
    echo 9 > /tmp/firstboot-done
    ;;
  *) echo "Warning: No case was found to run.";;
esac
